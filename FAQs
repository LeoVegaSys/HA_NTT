Below are some of the frequently asked questions and their answers:

Q.  How to check read_only parameters set on MySQL?
A.  Run commands `show variables like '%read%only%';` in MySQL to get the current configuration
    Sample result:
        +-----------------------+-------+
        | Variable_name         | Value |
        +-----------------------+-------+
        | innodb_read_only      | OFF   |
        | read_only             | OFF   |
        | super_read_only       | OFF   |
        | transaction_read_only | OFF   |
        | tx_read_only          | OFF   |
        +-----------------------+-------+
    In this, we are interested in read_only and super_read_only.
    read_only applies to non-root users
    super_read_only applies to root users
    Possible values : YES / NO
    YES denotes READ ONLY mode (no writes allowed) 
    NO denotes READ WRITE mode (writes allowed)

Q.  How to stop replication slave?
A.  Replication slave can be stopped by running the command `stop slave` in MySQL
    Verify the command success by running `show slave status\G`
    The result should contain the below lines
        Slave_IO_Running: No
        Slave_SQL_Running: No

Q.  How to start replication slave?
A.  Replication slave can be stopped by running the command `start slave` in MySQL
    Verify the command success by running `show slave status\G`
    The result should contain the below lines
        Slave_IO_Running: Yes
        Slave_SQL_Running: Yes

Q.  How to stop keepalived service?
A.  Keepalived service can be stopped by running the command `systemctl stop keepalived` on the terminal
    Verify the command success by running `systemctl status keepalived`
    The result should contain the below lines
        Active: inactive (dead)

Q.  How to start keepalived service?
A.  Keepalived service can be stopped by running the command `systemctl start keepalived` on the terminal
    Verify the command success by running `systemctl status keepalived`
    The result should contain the below lines
        Active: active (running)

Q.  How to stop HA for a given group of servers?
A.  The keepalived process needs to be stopped on servers, in increasing order of priority, BACKUP/s first, MASTER last.
    Run command `systemctl stop keepalived` on each server, and wait 15 seconds before running the same on the next one.
    Verify successful stop using command `systemctl status keepalived` output.

Q.  How to start HA for a given group of servers?
A.  The keepalived process needs to be started on servers, in decreasing order of priority, MASTER first, BACKUPs later.
    Run command `systemctl start keepalived` on each server, and wait 15 seconds before running the same on the next one.
    Verify successful stop using command `systemctl status keepalived` output.

Q.  How to refresh changes made to keepalived configuration?
A.  Use command `systemctl reload keepalived` to refresh/load changes made in keepalived configuration or related scripts

Q.  How to set the database to READ ONLY mode?
A.  To stop writes from normal (non-root) users , run command `SET GLOBAL read_only = ON;` in MySQL.
    To stop writes from root users , run command `SET GLOBAL super_read_only = ON;` in MySQL.
    Verify using command `show variables like '%read%only%';` in MySQL to get the current configuration

Q.  Where to check for Virtual IP assigned to current HA setup?
Q.  What is my Virtual IP?
A.  Virtual IP can be identified from the virtual_ipaddress section in the keepalived.conf located in the /etc/keepalived folder.
    This should match the IP set for VIRTUAL_IP parameter in *_ha_conf.ini located in the /etc/keepalived folder.

Q.  How to check which server is the MASTER at present?
A.  Run command `ip a | grep <VIRTUAL IP>` on the servers. Whichever server responds with `inet ...` is the MASTER in the current configuration. 

Q.  If the virtual IP for a given HA setup needs to be changed, which all files need to be updated?
A.  The following changes need to be made 0n all servers in the HA setup:
        - Replace the new virtual IP in the virtual_ipaddress section in the keepalived.conf located in the /etc/keepalived folder.
        - Set the same virtual IP for the VIRTUAL_IP parameter in *_ha_conf.ini located in the /etc/keepalived folder.
        - Run command `systemctl reload keepalived` to refresh keepalived configuration.
        - If the server is a designated sedcondary server, please verify if virtual IP is bring used to restart simplus stats as part of crontab job AUTO_DISC.
            If so, update the virtual IP to the correct value.

Q.  What checks to perform on HA switchover?
A.  Verify the MASTER server by using command `ip a | grep <VIRTUAL IP>`
    On the MASTER,
        - Run command `crontab -l` and verify crontab is in uncommented state
        - Run command `show variables like '%read%only%';` in MySQL and verify read_only and super_read_only variables are OFF
        - Verify if slave is running using command `show slave status\G` in MySQL and verify Slave_IO_Running and Slave_SQL_Running are set to YES
    On the BACKUP,
        - Run command `crontab -l` and verify crontab is in commented state
        - Run command `show variables like '%read%only%';` in MySQL and verify read_only and super_read_only variables are ON
        - Verify if slave is running using command `show slave status\G` in MySQL and verify Slave_IO_Running and Slave_SQL_Running are set to YES

Q.  Can firewall enabling cause an issue for HA?
A.  Yes. If firewall is enabled, there is a high chance replication will be affected or blocked.
    Verify firewall process is disabled using command `systemctl status firewalld`. 
    Response should contain     Active: inactive (dead)

Q.  From where do the scripts get the MySQL credentials, if input username and password are not provided?
A.  File .my.cnf, placed in the base folder of the user running the script, contains the username, password and hostname required for MySQL queries.
    E.g., for root user, the file .my.cnf will be present in path /root. Sample given below:
        [client] 
        user=<mysql-user> 
        password=<mysql-user-password> 
        host=localhost 

Q.  Which script can i use to comment crontab entries?
A.  The toggle_cron.sh script, located in /etc/keepalived folder, helps to comment/uncomment current crontab entries.
    To comment crontab, run command `sh toggle_cron.sh comment`
    To uncomment crontab, run command `sh toggle_cron.sh uncomment`
    Run command `crontab -l` to verify changes are as expected.

Q.  How to check keepalived logs?
A.  Keepalived live logs can be accessed using command `journalctl -u keepalived -f`

Q.  Where can I find the keepalived logs showing server switchover details?
A.  The log location is set by the KEEPALIVED_LOG parameter in *_ha_conf.ini located in the /etc/keepalived folder.

Q.  Please provide a description of the paramters provided in *_ha_conf.ini file.
A.  The parameters provided in *_ha_conf.ini file are accessed by various scripts in the keepalived setup. Their description is as follows:  
    HOST_IDENTIFIER             -- provides the pseudo name given to server, as a unique identifier
    IP                          -- server IP
    VIRTUAL_IP                  -- keepalived Virtual IP assigned to the HA setup
    SMTP_SERVER                 -- SMTP mail server
    SMTP_PORT                   -- SMTP mail server port
    SMTP_USER                   -- SMTP mail user name
    SMTP_PASS                   -- SMTP mail user password
    SENDER_EMAIL                -- Email sender ID
    RECEIVER_EMAIL              -- Email recipients IDs
    KEEPALIVED_LOG              -- Keepalived transition/switchover logs location
    KEEPALIVED_BASE_FOLDER      -- Keepalived folder location
    CRON_BACKUP                 -- Crontab backup file name
    CRON_TMP                    -- Crontab temporary file name
    CRON_TOGGLE_SCRIPT          -- Crontab toggle (cooment/uncomment) script name
    MYSQL_PATH                  -- MySQL package full path  [which mysql]
    PYTHON_PATH                 -- Python package full path [which python]
    PATH_ENV                    -- PATH environment variable for script
    IP_PATH                     -- ip package full path
    SIMPLUS_WS_PATH             -- Simplus workspace base location
    SIMPLUS_SCRIPT              -- Name of Simplus executable script
    SIMPLUS_PROC_IDENTIFIER     -- Simplus process name identifier. Used for process grep
    SIMPLUS_TRIGGER_POLLING_ON  -- Name of Simplus file to trigger polling
    SIMPLUS_TRIGGER_POLLING_OFF -- Name of Simplus file to stop polling
    LOCAL_MYSQL_CRED_CONF       -- Local file containing MySQL credentials
    MYSQL_CHECK_LOG             -- Location of log, maintaining MySQL READ ONLY parameters monitoring details
    BINLOG_DIR                  -- Base folder location for MySQL binlogs
    BACKUP_DIR                  -- Base folder location for storing backup compressed binlogs
    KEEP_LAST                   -- Number of latest logs, not to be backed up/purged
    BINLOG_PREFIX               -- Binlog file name prefix pattern

Q.  To add a new script to keepalived process, what preliminary checks should be performed to ensure smooth execution?
A.  Make sure that execute permissions are given to the script. You can use command `chmod +x <script>`.
    Environment variables are not available to the scripts. Ensure to use full paths for packages (MySQL, Python, etc.) used in the script.
    Provide ownership of the correct script execution user, using command `chown <user>:<user> <script>`
    Test the script by logging to a file, either by redirecting script output to a logfile OR adding logging to logfile in script using instruction `exec >> <logfile> 2>&1`

Q.  How to skip replication errors?
A.  Replication errors stop the replication slave and can be identified by running `show slave status\G` in MySQL and checking the Last_Error section.
    There are 2 approaches to skipping replication errors. They are:
        1. If each error has to be debugged and then skipped, after debugging the error 
            - you can stop the slave (using command `stop slave` in MySQL)
            - you can skip the last error (using command `SET GLOBAL sql_slave_skip_counter = 1;` in MySQL)
            - you can start the slave (using command `start slave` in MySQL)
            This skips the last error, and continues replication till the next error
        2. If the error is not impacting data consistency and can be ignored for future occurrences, 
            - the error code can be identified from the error
            - add the error code to the list of error codes assigned to skip-slave-errors configuration in my.cnf
            - restart the MySQL server for changes to take effect 

Q.  What other things regarding the HA setup should I know about?
A.  There are a few changes that have been introduced to keep HA running smoothly. Below is a list of these changes:
        - On designated secondary/backup servers, the Simplus script stat_kill_script.sh, executed as part of AUTO_DISC cronjob, kills the running Discovery and Simplus stats threads.
            This causes Simplus stats to restart and stay in non-polling mode.
            Checks have been added to the end of stat_kill_script.sh to ensure Simplus stats polls and writes data points.
            This has been achieved by renaming the Simplus trigger file spStatscommand.txt,to initiate polling again, if the server is in MASTER state and holds the Virtual IP.
        - When keepalived polls to check if a given service is running, a script manage_mysql_read.sh runs, monitoring MySQL read_only parameters (read_only and super_read_only).
            This resets them to the expected values (OFF if server is MASTER; ON otherwise), if they are not in expected state.